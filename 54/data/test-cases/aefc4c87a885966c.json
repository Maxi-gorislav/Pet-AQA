{"uid":"aefc4c87a885966c","name":"Verify update Pet","fullName":"core.pet.PetTests.verifyUpdatePet","historyId":"abade382a1239d08ee06b6b73c8a3c18","time":{"start":1681293316562,"stop":1681293324300,"duration":7738},"description":"","status":"failed","statusMessage":"Status code of clean up404 ==> expected: <200> but was: <404>","statusTrace":"org.opentest4j.AssertionFailedError: Status code of clean up404 ==> expected: <200> but was: <404>\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:559)\n\tat helper.clean_up.CleanUpExtension.deletePetById(CleanUpExtension.java:44)\n\tat helper.clean_up.CleanUpExtension.afterEach(CleanUpExtension.java:27)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAfterEachCallbacks$12(TestMethodTestDescriptor.java:257)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$13(TestMethodTestDescriptor.java:273)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$14(TestMethodTestDescriptor.java:273)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAllAfterMethodsOrCallbacks(TestMethodTestDescriptor.java:272)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAfterEachCallbacks(TestMethodTestDescriptor.java:256)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:141)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"","status":"failed","statusMessage":"Status code of clean up404 ==> expected: <200> but was: <404>","statusTrace":"org.opentest4j.AssertionFailedError: Status code of clean up404 ==> expected: <200> but was: <404>\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:559)\n\tat helper.clean_up.CleanUpExtension.deletePetById(CleanUpExtension.java:44)\n\tat helper.clean_up.CleanUpExtension.afterEach(CleanUpExtension.java:27)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAfterEachCallbacks$12(TestMethodTestDescriptor.java:257)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$13(TestMethodTestDescriptor.java:273)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$14(TestMethodTestDescriptor.java:273)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAllAfterMethodsOrCallbacks(TestMethodTestDescriptor.java:272)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAfterEachCallbacks(TestMethodTestDescriptor.java:256)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:141)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n","steps":[],"attachments":[{"uid":"1317ce58c11cec15","name":"Request","source":"1317ce58c11cec15.html","type":"text/html","size":1393},{"uid":"a3298c7d67573e3e","name":"HTTP/1.1 200 OK","source":"a3298c7d67573e3e.html","type":"text/html","size":1014},{"uid":"b9c1ff30e4d04679","name":"Request","source":"b9c1ff30e4d04679.html","type":"text/html","size":1385},{"uid":"a029fbfecc9611a","name":"HTTP/1.1 200 OK","source":"a029fbfecc9611a.html","type":"text/html","size":1011},{"uid":"787587f56cb8b249","name":"Request","source":"787587f56cb8b249.html","type":"text/html","size":475},{"uid":"70e27ff017515da1","name":"HTTP/1.1 200 OK","source":"70e27ff017515da1.html","type":"text/html","size":1011}],"parameters":[],"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0,"attachmentsCount":6},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:core.pet.PetTests]/[method:verifyUpdatePet()]"},{"name":"host","value":"fv-az577-320"},{"name":"thread","value":"2583@fv-az577-320.ForkJoinPool-1-worker-31(21)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"core.pet.PetTests"},{"name":"testClass","value":"core.pet.PetTests"},{"name":"testMethod","value":"verifyUpdatePet"},{"name":"suite","value":"[Pet tests]"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"allure","type":"mylink"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":12},"items":[{"uid":"8b05b1d0b4e9eda8","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/53//#testresult/8b05b1d0b4e9eda8","status":"failed","statusDetails":"Status code of clean up404 ==> expected: <200> but was: <404>","time":{"start":1681291306190,"stop":1681291315207,"duration":9017}},{"uid":"8f589028f0c0674c","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/51//#testresult/8f589028f0c0674c","status":"failed","statusDetails":"Response code not as expected! Expected 200 but found 500","time":{"start":1681248763790,"stop":1681248769161,"duration":5371}},{"uid":"cbb5e24fe87db1b5","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/48//#testresult/cbb5e24fe87db1b5","status":"failed","statusDetails":"Response code not as expected! Expected 200 but found 500","time":{"start":1681222631314,"stop":1681222635905,"duration":4591}},{"uid":"4f1a51d0efecc8ee","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/47//#testresult/4f1a51d0efecc8ee","status":"failed","statusDetails":"Response code not as expected! Expected 200 but found 500","time":{"start":1681221864537,"stop":1681221867783,"duration":3246}},{"uid":"b4dfc63953be57fc","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/46//#testresult/b4dfc63953be57fc","status":"failed","statusDetails":"Response code not as expected! Expected 200 but found 500","time":{"start":1681221224466,"stop":1681221228707,"duration":4241}},{"uid":"cf9c1bb101517078","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/46//#testresult/cf9c1bb101517078","status":"failed","statusDetails":"Response code not as expected! Expected 200 but found 500","time":{"start":1681220929941,"stop":1681220934651,"duration":4710}},{"uid":"4e1705530408dbc1","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/45//#testresult/4e1705530408dbc1","status":"failed","statusDetails":"Response code not as expected! Expected 200 but found 500","time":{"start":1681220670129,"stop":1681220674812,"duration":4683}},{"uid":"de443b110f1ab511","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/44//#testresult/de443b110f1ab511","status":"passed","time":{"start":1681071580143,"stop":1681071589862,"duration":9719}},{"uid":"53056537d9ac6cd2","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/43//#testresult/53056537d9ac6cd2","status":"passed","time":{"start":1681071208080,"stop":1681071218277,"duration":10197}},{"uid":"9140e437aee38f05","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/42//#testresult/9140e437aee38f05","status":"passed","time":{"start":1681070268045,"stop":1681070279108,"duration":11063}},{"uid":"67211c9a076a1dfb","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/41//#testresult/67211c9a076a1dfb","status":"passed","time":{"start":1681069769407,"stop":1681069779377,"duration":9970}}]},"tags":[]},"source":"aefc4c87a885966c.json","parameterValues":[]}