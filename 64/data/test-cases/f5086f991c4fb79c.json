{"uid":"f5086f991c4fb79c","name":"Verify create multiple Pet","fullName":"core.pet.PetTests.verifyAddMultiplePets","historyId":"e066fb2ca9a6044b9e931aa685e8c739","time":{"start":1685627647401,"stop":1685627653253,"duration":5852},"description":"","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":true,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"","status":"passed","steps":[{"name":"Add new Pet {PetDTO.name}","time":{"start":1685627647406,"stop":1685627647695,"duration":289},"status":"passed","steps":[],"attachments":[{"uid":"5c8ce5d2f2123595","name":"Request","source":"5c8ce5d2f2123595.html","type":"text/html","size":1331},{"uid":"504e9cf7531a21ca","name":"HTTP/1.1 200 OK","source":"504e9cf7531a21ca.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@c75fe32"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685627647696,"stop":1685627647700,"duration":4},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@7d645973'","time":{"start":1685627647698,"stop":1685627647698,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"usingRecursiveComparison","time":{"start":1685627647698,"stop":1685627647699,"duration":1},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685627647699,"stop":1685627647699,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"ignoringFields '[id]'","time":{"start":1685627647699,"stop":1685627647699,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@c75fe32'","time":{"start":1685627647699,"stop":1685627647700,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@c75fe32"}],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685627647707,"stop":1685627647953,"duration":246},"status":"passed","steps":[],"attachments":[{"uid":"faabedfb087642c2","name":"Request","source":"faabedfb087642c2.html","type":"text/html","size":1331},{"uid":"5da2057fec8e0707","name":"HTTP/1.1 200 OK","source":"5da2057fec8e0707.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@37ffb408"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685627647954,"stop":1685627647967,"duration":13},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@16f91f2a'","time":{"start":1685627647959,"stop":1685627647959,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"usingRecursiveComparison","time":{"start":1685627647959,"stop":1685627647960,"duration":1},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685627647960,"stop":1685627647960,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"ignoringFields '[id]'","time":{"start":1685627647960,"stop":1685627647960,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@37ffb408'","time":{"start":1685627647960,"stop":1685627647967,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@37ffb408"}],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685627647971,"stop":1685627648224,"duration":253},"status":"passed","steps":[],"attachments":[{"uid":"764d208ed189178f","name":"Request","source":"764d208ed189178f.html","type":"text/html","size":1331},{"uid":"1763fdd74d6eed45","name":"HTTP/1.1 200 OK","source":"1763fdd74d6eed45.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@7b59d20"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685627648225,"stop":1685627648229,"duration":4},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@68ab2085'","time":{"start":1685627648227,"stop":1685627648228,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"usingRecursiveComparison","time":{"start":1685627648228,"stop":1685627648228,"duration":0},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685627648228,"stop":1685627648228,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"ignoringFields '[id]'","time":{"start":1685627648228,"stop":1685627648228,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@7b59d20'","time":{"start":1685627648228,"stop":1685627648228,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@7b59d20"}],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685627648231,"stop":1685627648485,"duration":254},"status":"passed","steps":[],"attachments":[{"uid":"3829b4025f267e0c","name":"Request","source":"3829b4025f267e0c.html","type":"text/html","size":1331},{"uid":"2bfa31a0c7e4a77d","name":"HTTP/1.1 200 OK","source":"2bfa31a0c7e4a77d.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@5c58c9f"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685627648486,"stop":1685627648490,"duration":4},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@636682b2'","time":{"start":1685627648489,"stop":1685627648489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"usingRecursiveComparison","time":{"start":1685627648489,"stop":1685627648489,"duration":0},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685627648489,"stop":1685627648489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"ignoringFields '[id]'","time":{"start":1685627648489,"stop":1685627648489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@5c58c9f'","time":{"start":1685627648489,"stop":1685627648490,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@5c58c9f"}],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685627648492,"stop":1685627648754,"duration":262},"status":"passed","steps":[],"attachments":[{"uid":"23d250508ed8d4a8","name":"Request","source":"23d250508ed8d4a8.html","type":"text/html","size":1331},{"uid":"c649513372260e23","name":"HTTP/1.1 200 OK","source":"c649513372260e23.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@7c1f9ca6"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685627648754,"stop":1685627648767,"duration":13},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@3f339528'","time":{"start":1685627648763,"stop":1685627648763,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"usingRecursiveComparison","time":{"start":1685627648763,"stop":1685627648763,"duration":0},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685627648763,"stop":1685627648763,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"ignoringFields '[id]'","time":{"start":1685627648764,"stop":1685627648764,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@7c1f9ca6'","time":{"start":1685627648764,"stop":1685627648767,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@7c1f9ca6"}],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685627648772,"stop":1685627649041,"duration":269},"status":"passed","steps":[],"attachments":[{"uid":"639bf2dbe45996bd","name":"Request","source":"639bf2dbe45996bd.html","type":"text/html","size":1331},{"uid":"7d97df327c44a920","name":"HTTP/1.1 200 OK","source":"7d97df327c44a920.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@601e465b"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685627649041,"stop":1685627649064,"duration":23},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@29765192'","time":{"start":1685627649063,"stop":1685627649063,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"usingRecursiveComparison","time":{"start":1685627649063,"stop":1685627649063,"duration":0},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685627649063,"stop":1685627649063,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"ignoringFields '[id]'","time":{"start":1685627649063,"stop":1685627649063,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@601e465b'","time":{"start":1685627649063,"stop":1685627649064,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@601e465b"}],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685627649071,"stop":1685627649564,"duration":493},"status":"passed","steps":[],"attachments":[{"uid":"642b48738f45d69e","name":"Request","source":"642b48738f45d69e.html","type":"text/html","size":1331},{"uid":"2c442cdb5b718132","name":"HTTP/1.1 200 OK","source":"2c442cdb5b718132.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@48c716c0"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685627649565,"stop":1685627649599,"duration":34},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@6be0ea10'","time":{"start":1685627649588,"stop":1685627649588,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"usingRecursiveComparison","time":{"start":1685627649588,"stop":1685627649595,"duration":7},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685627649588,"stop":1685627649588,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"ignoringFields '[id]'","time":{"start":1685627649595,"stop":1685627649595,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@48c716c0'","time":{"start":1685627649595,"stop":1685627649599,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@48c716c0"}],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685627649610,"stop":1685627650110,"duration":500},"status":"passed","steps":[],"attachments":[{"uid":"46642deee1f36114","name":"Request","source":"46642deee1f36114.html","type":"text/html","size":1331},{"uid":"305a61cf3a62016c","name":"HTTP/1.1 200 OK","source":"305a61cf3a62016c.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@3a1bb993"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685627650110,"stop":1685627650122,"duration":12},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@28955b33'","time":{"start":1685627650121,"stop":1685627650121,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"usingRecursiveComparison","time":{"start":1685627650121,"stop":1685627650121,"duration":0},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685627650121,"stop":1685627650121,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"ignoringFields '[id]'","time":{"start":1685627650121,"stop":1685627650121,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@3a1bb993'","time":{"start":1685627650121,"stop":1685627650122,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@3a1bb993"}],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685627650132,"stop":1685627650518,"duration":386},"status":"passed","steps":[],"attachments":[{"uid":"53134a36517336b4","name":"Request","source":"53134a36517336b4.html","type":"text/html","size":1331},{"uid":"b03829ba103ebd35","name":"HTTP/1.1 200 OK","source":"b03829ba103ebd35.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@761e2c40"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685627650518,"stop":1685627650539,"duration":21},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@6036989c'","time":{"start":1685627650535,"stop":1685627650535,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"usingRecursiveComparison","time":{"start":1685627650535,"stop":1685627650536,"duration":1},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685627650536,"stop":1685627650536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"ignoringFields '[id]'","time":{"start":1685627650537,"stop":1685627650537,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@761e2c40'","time":{"start":1685627650537,"stop":1685627650539,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@761e2c40"}],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685627650543,"stop":1685627650807,"duration":264},"status":"passed","steps":[],"attachments":[{"uid":"4d96e70db8970736","name":"Request","source":"4d96e70db8970736.html","type":"text/html","size":1331},{"uid":"ffadeff1f879d819","name":"HTTP/1.1 200 OK","source":"ffadeff1f879d819.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@66ce8283"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685627650807,"stop":1685627650856,"duration":49},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@762bbee0'","time":{"start":1685627650855,"stop":1685627650855,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"usingRecursiveComparison","time":{"start":1685627650855,"stop":1685627650855,"duration":0},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685627650855,"stop":1685627650855,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"ignoringFields '[id]'","time":{"start":1685627650855,"stop":1685627650855,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@66ce8283'","time":{"start":1685627650855,"stop":1685627650856,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@66ce8283"}],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Delete pet by id: 9223372036854637151","time":{"start":1685627650856,"stop":1685627651084,"duration":228},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637151"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Delete pet by id: 9223372036854637150","time":{"start":1685627651085,"stop":1685627651313,"duration":228},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637150"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Delete pet by id: 9223372036854637161","time":{"start":1685627651313,"stop":1685627651627,"duration":314},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637161"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Delete pet by id: 9223372036854637162","time":{"start":1685627651627,"stop":1685627651882,"duration":255},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637162"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Delete pet by id: 9223372036854637156","time":{"start":1685627651882,"stop":1685627652139,"duration":257},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637156"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Delete pet by id: 9223372036854637159","time":{"start":1685627652139,"stop":1685627652387,"duration":248},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637159"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Delete pet by id: 9223372036854637153","time":{"start":1685627652387,"stop":1685627652629,"duration":242},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637153"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Delete pet by id: 9223372036854637152","time":{"start":1685627652629,"stop":1685627652832,"duration":203},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637152"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Delete pet by id: 9223372036854637155","time":{"start":1685627652833,"stop":1685627653047,"duration":214},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637155"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Delete pet by id: 9223372036854637154","time":{"start":1685627653047,"stop":1685627653252,"duration":205},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637154"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":80,"attachmentsCount":20,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:core.pet.PetTests]/[method:verifyAddMultiplePets()]"},{"name":"host","value":"fv-az283-299"},{"name":"thread","value":"2719@fv-az283-299.ForkJoinPool-1-worker-51(15)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"core.pet.PetTests"},{"name":"testClass","value":"core.pet.PetTests"},{"name":"testMethod","value":"verifyAddMultiplePets"},{"name":"suite","value":"[Pet tests]"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"allure","type":"mylink"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":3,"broken":1,"skipped":0,"passed":5,"unknown":0,"total":9},"items":[{"uid":"6c9a843e52e8b604","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/63//#testresult/6c9a843e52e8b604","status":"failed","statusDetails":"Status code of clean up404 ==> expected: <200> but was: <404>","time":{"start":1685473248104,"stop":1685473249938,"duration":1834}},{"uid":"55396fde1618173c","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/62//#testresult/55396fde1618173c","status":"passed","time":{"start":1681817156188,"stop":1681817161087,"duration":4899}},{"uid":"461baf7cd9ae10f2","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/61//#testresult/461baf7cd9ae10f2","status":"failed","statusDetails":"Status code of clean up404 ==> expected: <200> but was: <404>","time":{"start":1681815176156,"stop":1681815181678,"duration":5522}},{"uid":"2396cf8e270e3f1c","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/60//#testresult/2396cf8e270e3f1c","status":"failed","statusDetails":"Status code of clean up404 ==> expected: <200> but was: <404>","time":{"start":1681763509520,"stop":1681763510920,"duration":1400}},{"uid":"52cf33c7f9d085d3","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/59//#testresult/52cf33c7f9d085d3","status":"passed","time":{"start":1681378177431,"stop":1681378180259,"duration":2828}},{"uid":"daed7165e89fc9cc","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/58//#testresult/daed7165e89fc9cc","status":"passed","time":{"start":1681295732020,"stop":1681295736650,"duration":4630}},{"uid":"19b8653a4062680","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/57//#testresult/19b8653a4062680","status":"broken","statusDetails":"Cannot create property=shoppingPath for JavaBean=CoreConfig(hostUrl=https://demo-opencart.com/, adminUiUrl=https://demo-opencart.com/admin, amadeusUrl=https://test.api.amadeus.com, checkInLink=null, petPath=null, petUrl=null, clientId=null, secretKey=null)\n in 'reader', line 2, column 1:\n    hostUrl: https://demo-opencart.com/\n    ^\nUnable to find property 'shoppingPath' on class: config.CoreConfig\n in 'reader', line 6, column 15:\n    shoppingPath: /v2/reference-data/urls\n                  ^\n","time":{"start":1681295216297,"stop":1681295216318,"duration":21}},{"uid":"88b39e879d74e57b","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/56//#testresult/88b39e879d74e57b","status":"passed","time":{"start":1681294656524,"stop":1681294658508,"duration":1984}}]},"tags":[]},"source":"f5086f991c4fb79c.json","parameterValues":[]}