{"uid":"b4861d6caa207180","name":"Verify create multiple Pet","fullName":"core.pet.PetTests.verifyAddMultiplePets","historyId":"e066fb2ca9a6044b9e931aa685e8c739","time":{"start":1685629828695,"stop":1685629830574,"duration":1879},"description":"","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"","status":"passed","steps":[{"name":"Add new Pet {PetDTO.name}","time":{"start":1685629828698,"stop":1685629828808,"duration":110},"status":"passed","steps":[],"attachments":[{"uid":"67256267ceb1c25e","name":"Request","source":"67256267ceb1c25e.html","type":"text/html","size":1331},{"uid":"6a640f77ecf994a8","name":"HTTP/1.1 200 OK","source":"6a640f77ecf994a8.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@319259cf"}],"hasContent":true,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685629828809,"stop":1685629828816,"duration":7},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@6720a4a9'","time":{"start":1685629828815,"stop":1685629828815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"usingRecursiveComparison","time":{"start":1685629828815,"stop":1685629828815,"duration":0},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685629828815,"stop":1685629828815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"ignoringFields '[id]'","time":{"start":1685629828815,"stop":1685629828815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@319259cf'","time":{"start":1685629828815,"stop":1685629828816,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@319259cf"}],"hasContent":true,"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685629828818,"stop":1685629828954,"duration":136},"status":"passed","steps":[],"attachments":[{"uid":"72e92e6529ad5fc3","name":"Request","source":"72e92e6529ad5fc3.html","type":"text/html","size":1331},{"uid":"1d091b972fd7197f","name":"HTTP/1.1 200 OK","source":"1d091b972fd7197f.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@5b1379d5"}],"hasContent":true,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685629828954,"stop":1685629828969,"duration":15},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@31111d14'","time":{"start":1685629828961,"stop":1685629828961,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"usingRecursiveComparison","time":{"start":1685629828961,"stop":1685629828961,"duration":0},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685629828961,"stop":1685629828961,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"ignoringFields '[id]'","time":{"start":1685629828961,"stop":1685629828961,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@5b1379d5'","time":{"start":1685629828961,"stop":1685629828969,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@5b1379d5"}],"hasContent":true,"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685629828979,"stop":1685629829070,"duration":91},"status":"passed","steps":[],"attachments":[{"uid":"a36995156a391d4d","name":"Request","source":"a36995156a391d4d.html","type":"text/html","size":1331},{"uid":"12330b0dfb376811","name":"HTTP/1.1 200 OK","source":"12330b0dfb376811.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@7efff8c5"}],"hasContent":true,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685629829070,"stop":1685629829075,"duration":5},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@4f287d81'","time":{"start":1685629829074,"stop":1685629829074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"usingRecursiveComparison","time":{"start":1685629829074,"stop":1685629829075,"duration":1},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685629829075,"stop":1685629829075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"ignoringFields '[id]'","time":{"start":1685629829075,"stop":1685629829075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@7efff8c5'","time":{"start":1685629829075,"stop":1685629829075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@7efff8c5"}],"hasContent":true,"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685629829078,"stop":1685629829203,"duration":125},"status":"passed","steps":[],"attachments":[{"uid":"2dc50df1edf703c7","name":"Request","source":"2dc50df1edf703c7.html","type":"text/html","size":1331},{"uid":"f840c6fb6ad98aff","name":"HTTP/1.1 200 OK","source":"f840c6fb6ad98aff.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@31566906"}],"hasContent":true,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685629829203,"stop":1685629829213,"duration":10},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@3ed92c43'","time":{"start":1685629829210,"stop":1685629829210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"usingRecursiveComparison","time":{"start":1685629829211,"stop":1685629829211,"duration":0},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685629829211,"stop":1685629829211,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"ignoringFields '[id]'","time":{"start":1685629829212,"stop":1685629829212,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@31566906'","time":{"start":1685629829212,"stop":1685629829213,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@31566906"}],"hasContent":true,"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685629829216,"stop":1685629829330,"duration":114},"status":"passed","steps":[],"attachments":[{"uid":"6436780ce8aa3191","name":"Request","source":"6436780ce8aa3191.html","type":"text/html","size":1331},{"uid":"55fde48d6a48b3a2","name":"HTTP/1.1 200 OK","source":"55fde48d6a48b3a2.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@da17c0b"}],"hasContent":true,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685629829330,"stop":1685629829334,"duration":4},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@3469e106'","time":{"start":1685629829333,"stop":1685629829333,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"usingRecursiveComparison","time":{"start":1685629829333,"stop":1685629829333,"duration":0},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685629829333,"stop":1685629829333,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"ignoringFields '[id]'","time":{"start":1685629829333,"stop":1685629829333,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@da17c0b'","time":{"start":1685629829333,"stop":1685629829334,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@da17c0b"}],"hasContent":true,"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685629829336,"stop":1685629829431,"duration":95},"status":"passed","steps":[],"attachments":[{"uid":"72d6e889e8b6445d","name":"Request","source":"72d6e889e8b6445d.html","type":"text/html","size":1331},{"uid":"4c5bb146ac2ddca9","name":"HTTP/1.1 200 OK","source":"4c5bb146ac2ddca9.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@6a8d12d3"}],"hasContent":true,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685629829431,"stop":1685629829439,"duration":8},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@1922d7a8'","time":{"start":1685629829438,"stop":1685629829438,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"usingRecursiveComparison","time":{"start":1685629829438,"stop":1685629829438,"duration":0},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685629829438,"stop":1685629829438,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"ignoringFields '[id]'","time":{"start":1685629829438,"stop":1685629829438,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@6a8d12d3'","time":{"start":1685629829438,"stop":1685629829439,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@6a8d12d3"}],"hasContent":true,"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685629829447,"stop":1685629829566,"duration":119},"status":"passed","steps":[],"attachments":[{"uid":"84de81e3f3cc678c","name":"Request","source":"84de81e3f3cc678c.html","type":"text/html","size":1331},{"uid":"1aaf621500477756","name":"HTTP/1.1 200 OK","source":"1aaf621500477756.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@3d0e206f"}],"hasContent":true,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685629829566,"stop":1685629829578,"duration":12},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@39564a51'","time":{"start":1685629829575,"stop":1685629829575,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"usingRecursiveComparison","time":{"start":1685629829575,"stop":1685629829577,"duration":2},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685629829575,"stop":1685629829575,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"ignoringFields '[id]'","time":{"start":1685629829577,"stop":1685629829577,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@3d0e206f'","time":{"start":1685629829577,"stop":1685629829577,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@3d0e206f"}],"hasContent":true,"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685629829581,"stop":1685629829667,"duration":86},"status":"passed","steps":[],"attachments":[{"uid":"b5e04b8346549a19","name":"Request","source":"b5e04b8346549a19.html","type":"text/html","size":1331},{"uid":"789e7ebd98d539e7","name":"HTTP/1.1 200 OK","source":"789e7ebd98d539e7.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@1cee62b4"}],"hasContent":true,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685629829667,"stop":1685629829673,"duration":6},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@2e4aea8a'","time":{"start":1685629829672,"stop":1685629829672,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"usingRecursiveComparison","time":{"start":1685629829672,"stop":1685629829672,"duration":0},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685629829672,"stop":1685629829672,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"ignoringFields '[id]'","time":{"start":1685629829673,"stop":1685629829673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@1cee62b4'","time":{"start":1685629829673,"stop":1685629829673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@1cee62b4"}],"hasContent":true,"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685629829676,"stop":1685629829764,"duration":88},"status":"passed","steps":[],"attachments":[{"uid":"97c000dad68a955a","name":"Request","source":"97c000dad68a955a.html","type":"text/html","size":1331},{"uid":"9d7fa3597e3c180b","name":"HTTP/1.1 200 OK","source":"9d7fa3597e3c180b.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@16e2e1f5"}],"hasContent":true,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685629829764,"stop":1685629829773,"duration":9},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@7a87742'","time":{"start":1685629829767,"stop":1685629829767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"usingRecursiveComparison","time":{"start":1685629829767,"stop":1685629829768,"duration":1},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685629829768,"stop":1685629829768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"ignoringFields '[id]'","time":{"start":1685629829768,"stop":1685629829768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@16e2e1f5'","time":{"start":1685629829768,"stop":1685629829773,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@16e2e1f5"}],"hasContent":true,"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Add new Pet {PetDTO.name}","time":{"start":1685629829780,"stop":1685629829866,"duration":86},"status":"passed","steps":[],"attachments":[{"uid":"a88d22eed054046b","name":"Request","source":"a88d22eed054046b.html","type":"text/html","size":1331},{"uid":"a8d4e878b1a5bc7a","name":"HTTP/1.1 200 OK","source":"a8d4e878b1a5bc7a.html","type":"text/html","size":1024}],"parameters":[{"name":"pet","value":"entities.dto.pet.PetDTO@44a13288"}],"hasContent":true,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"Expected response value equals to Policy Plan: 'doggie'","time":{"start":1685629829866,"stop":1685629829871,"duration":5},"status":"passed","steps":[{"name":"assertThat 'entities.dto.pet.PetDTO@68a4449c'","time":{"start":1685629829870,"stop":1685629829870,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"usingRecursiveComparison","time":{"start":1685629829870,"stop":1685629829871,"duration":1},"status":"passed","steps":[{"name":"usingRecursiveComparison '- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n'","time":{"start":1685629829870,"stop":1685629829870,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"ignoringFields '[id]'","time":{"start":1685629829871,"stop":1685629829871,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"isEqualTo 'entities.dto.pet.PetDTO@44a13288'","time":{"start":1685629829871,"stop":1685629829871,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[{"name":"expected","value":"entities.dto.pet.PetDTO@44a13288"}],"hasContent":true,"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Delete pet by id: 9223372036854637737","time":{"start":1685629829871,"stop":1685629829930,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637737"}],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Delete pet by id: 9223372036854637736","time":{"start":1685629829930,"stop":1685629829989,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637736"}],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Delete pet by id: 9223372036854637738","time":{"start":1685629829989,"stop":1685629830058,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637738"}],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Delete pet by id: 9223372036854637733","time":{"start":1685629830058,"stop":1685629830143,"duration":85},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637733"}],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Delete pet by id: 9223372036854637732","time":{"start":1685629830143,"stop":1685629830198,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637732"}],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Delete pet by id: 9223372036854637735","time":{"start":1685629830198,"stop":1685629830253,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637735"}],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Delete pet by id: 9223372036854637734","time":{"start":1685629830253,"stop":1685629830363,"duration":110},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637734"}],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Delete pet by id: 9223372036854637729","time":{"start":1685629830363,"stop":1685629830435,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637729"}],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Delete pet by id: 9223372036854637731","time":{"start":1685629830435,"stop":1685629830503,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637731"}],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Delete pet by id: 9223372036854637730","time":{"start":1685629830503,"stop":1685629830574,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"9223372036854637730"}],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":80,"attachmentsCount":20,"shouldDisplayMessage":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:core.pet.PetTests]/[method:verifyAddMultiplePets()]"},{"name":"host","value":"fv-az562-632"},{"name":"thread","value":"2542@fv-az562-632.ForkJoinPool-1-worker-51(15)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"core.pet.PetTests"},{"name":"testClass","value":"core.pet.PetTests"},{"name":"testMethod","value":"verifyAddMultiplePets"},{"name":"suite","value":"[Pet tests]"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"allure","type":"mylink"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":3,"broken":1,"skipped":0,"passed":6,"unknown":0,"total":10},"items":[{"uid":"f5086f991c4fb79c","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/64//#testresult/f5086f991c4fb79c","status":"passed","time":{"start":1685627647401,"stop":1685627653253,"duration":5852}},{"uid":"6c9a843e52e8b604","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/63//#testresult/6c9a843e52e8b604","status":"failed","statusDetails":"Status code of clean up404 ==> expected: <200> but was: <404>","time":{"start":1685473248104,"stop":1685473249938,"duration":1834}},{"uid":"55396fde1618173c","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/62//#testresult/55396fde1618173c","status":"passed","time":{"start":1681817156188,"stop":1681817161087,"duration":4899}},{"uid":"461baf7cd9ae10f2","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/61//#testresult/461baf7cd9ae10f2","status":"failed","statusDetails":"Status code of clean up404 ==> expected: <200> but was: <404>","time":{"start":1681815176156,"stop":1681815181678,"duration":5522}},{"uid":"2396cf8e270e3f1c","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/60//#testresult/2396cf8e270e3f1c","status":"failed","statusDetails":"Status code of clean up404 ==> expected: <200> but was: <404>","time":{"start":1681763509520,"stop":1681763510920,"duration":1400}},{"uid":"52cf33c7f9d085d3","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/59//#testresult/52cf33c7f9d085d3","status":"passed","time":{"start":1681378177431,"stop":1681378180259,"duration":2828}},{"uid":"daed7165e89fc9cc","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/58//#testresult/daed7165e89fc9cc","status":"passed","time":{"start":1681295732020,"stop":1681295736650,"duration":4630}},{"uid":"19b8653a4062680","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/57//#testresult/19b8653a4062680","status":"broken","statusDetails":"Cannot create property=shoppingPath for JavaBean=CoreConfig(hostUrl=https://demo-opencart.com/, adminUiUrl=https://demo-opencart.com/admin, amadeusUrl=https://test.api.amadeus.com, checkInLink=null, petPath=null, petUrl=null, clientId=null, secretKey=null)\n in 'reader', line 2, column 1:\n    hostUrl: https://demo-opencart.com/\n    ^\nUnable to find property 'shoppingPath' on class: config.CoreConfig\n in 'reader', line 6, column 15:\n    shoppingPath: /v2/reference-data/urls\n                  ^\n","time":{"start":1681295216297,"stop":1681295216318,"duration":21}},{"uid":"88b39e879d74e57b","reportUrl":"https://Maxi-gorislav.github.io/Pet-AQA/56//#testresult/88b39e879d74e57b","status":"passed","time":{"start":1681294656524,"stop":1681294658508,"duration":1984}}]},"tags":[]},"source":"b4861d6caa207180.json","parameterValues":[]}